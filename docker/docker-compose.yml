version: "3.8"
services:
  order-service:
    depends_on:
      - polar-postgres
    image: "order-service"
    container_name: "order-service"
    networks:
      - polar-network
    ports:
      - "9002:9002"
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8001
      - SPRING_R2DBC_URL=r2dbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_FLYWAY_URL=jdbc:postgresql://polar-postgres:5432/polardb_order

  catalog-service:
    depends_on:
      - polar-postgres
    image: "catalog-service"
    container_name: "catalog-service"
    networks:
      - polar-network
    ports:
      - "9001:9001"
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8001
      - SPRING_DATASOURCE_URL=jdbc:postgresql://polar-postgres:5432/polardb_catalog
      - SPRING_PROFILES_ACTIVE=testdata

  polar-postgres:
    image: "postgres:16.0"
    container_name: "polar-postgres"
    networks:
      - polar-network
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql

  polar-redis:
    image: "redis:7.0"
    container_name: "polar-redis"
    ports:
      - "6379:6379"
    networks:
      - polar-network

networks:
  polar-network:
    driver: bridge
